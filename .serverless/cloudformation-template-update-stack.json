{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "PublisherLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/publishsns-serverless-local-publisher"
      }
    },
    "RecievemsgLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/publishsns-serverless-local-recievemsg"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "publishsns-serverless",
                  "local",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/publishsns-serverless-local*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/publishsns-serverless-local*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:CreateQueue",
                    "sqs:DeleteMessage",
                    "sqs:DeleteQueue",
                    "sqs:ReceiveMessage",
                    "sqs:SendMessage"
                  ],
                  "Resource": "arn:aws:sqs:us-east-1:*:*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "MyQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "publishsns-serverless",
              "local",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "PublisherLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "__local__",
          "S3Key": "/home/ayman/Documents/go-repos/testlocalstack"
        },
        "Handler": "/bin/publishsns",
        "Runtime": "go1.x",
        "FunctionName": "publishsns-serverless-local-publisher",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "AWS_ACCESS_KEY_ID": "xxxxxxx",
            "AWS_SECRET_ACCESS_KEY": "xxx",
            "AWS_REGION": "us-east-1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "PublisherLogGroup"
      ]
    },
    "RecievemsgLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": "__local__",
          "S3Key": "/home/ayman/Documents/go-repos/testlocalstack"
        },
        "Handler": "/bin/recivemsg",
        "Runtime": "go1.x",
        "FunctionName": "publishsns-serverless-local-recievemsg",
        "MemorySize": 1024,
        "Timeout": 6,
        "Environment": {
          "Variables": {
            "AWS_ACCESS_KEY_ID": "xxxxxxx",
            "AWS_SECRET_ACCESS_KEY": "xxx",
            "AWS_REGION": "us-east-1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "RecievemsgLogGroup"
      ]
    },
    "PublisherLambdaVersionn15QMvEJEUAh8dPCgrMrhfUTJGGUBDQ699fxHVw4nAk": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "PublisherLambdaFunction"
        },
        "CodeSha256": "2nnq7zwS9x96TiUYYJ4Tf90WPBUwWEXRIQkXZQSHGyc="
      }
    },
    "RecievemsgLambdaVersionUX2KcW2atuzE1Qsctm9dHyukqGM6F27ywlnsbOMyM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "RecievemsgLambdaFunction"
        },
        "CodeSha256": "2nnq7zwS9x96TiUYYJ4Tf90WPBUwWEXRIQkXZQSHGyc="
      }
    },
    "PublisherEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(0.5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "PublisherLambdaFunction",
                "Arn"
              ]
            },
            "Id": "publisherSchedule"
          }
        ]
      }
    },
    "PublisherLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "PublisherLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "PublisherEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "RecievemsgEventsRuleSchedule1": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(0.6 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "RecievemsgLambdaFunction",
                "Arn"
              ]
            },
            "Id": "recievemsgSchedule"
          }
        ]
      }
    },
    "RecievemsgLambdaPermissionEventsRuleSchedule1": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "RecievemsgLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "RecievemsgEventsRuleSchedule1",
            "Arn"
          ]
        }
      }
    },
    "RecievemsgEventSourceMappingSQSMyQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "MyQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "RecievemsgLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "MyQueue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "QueueName": "myQueue"
      }
    },
    "MyTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": "my description",
        "TopicName": "topicSLS"
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-publishsns-serverless-local-ServerlessDeploymentBucketName"
      }
    },
    "PublisherLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "PublisherLambdaVersionn15QMvEJEUAh8dPCgrMrhfUTJGGUBDQ699fxHVw4nAk"
      },
      "Export": {
        "Name": "sls-publishsns-serverless-local-PublisherLambdaFunctionQualifiedArn"
      }
    },
    "RecievemsgLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "RecievemsgLambdaVersionUX2KcW2atuzE1Qsctm9dHyukqGM6F27ywlnsbOMyM"
      },
      "Export": {
        "Name": "sls-publishsns-serverless-local-RecievemsgLambdaFunctionQualifiedArn"
      }
    }
  }
}